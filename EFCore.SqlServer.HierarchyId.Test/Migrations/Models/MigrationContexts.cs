using Microsoft.EntityFrameworkCore.Metadata.Builders;
using Microsoft.EntityFrameworkCore.Metadata.Internal;

namespace Microsoft.EntityFrameworkCore.SqlServer.Migrations.Models
{
    internal abstract class MigrationContext : DbContext
    {
        public DbSet<Person> People { get; set; }

        protected override void OnConfiguring(DbContextOptionsBuilder options)
            => options
                .UseSqlServer(
                    @"Data Source=(localdb)\MSSQLLocalDB;Initial Catalog=HierarchyIdMigrationTests",
                    x => x.UseHierarchyId());

        [System.Diagnostics.CodeAnalysis.SuppressMessage("Usage", "EF1001:Internal EF Core API usage.", Justification = "Uses internal efcore apis.")]
        protected void RemoveVariableModelAnnotations(ModelBuilder modelBuilder)
        {
            var model = modelBuilder.Model;

            //the values of these could change between versions
            //so get rid of them for the tests
            model.RemoveAnnotation(CoreAnnotationNames.ProductVersion);
            model.RemoveAnnotation("Relational:MaxIdentifierLength");
            model.RemoveAnnotation("SqlServer:ValueGenerationStrategy");
        }

        protected abstract void SeedData(EntityTypeBuilder<Person> builder);

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            RemoveVariableModelAnnotations(modelBuilder);
            SeedData(modelBuilder.Entity<Person>());

        }


        public abstract string GetExpectedMigrationCode(string migrationName, string @namespace);
        public abstract string GetExpectedSnapshotCode(string @namespace);
    }

    internal sealed class MigrationContext1 : MigrationContext
    {
        private static readonly HierarchyId _rootHid = HierarchyId.GetRoot();
        private static readonly HierarchyId _childHid1 = HierarchyId.Parse("/1/");
        private static readonly HierarchyId _childHid2 = HierarchyId.Parse("/2/");

        protected override void SeedData(EntityTypeBuilder<Person> builder)
        {
            builder.HasData(
                new Person { Id = _rootHid, Name = "Eddard Stark" },
                new Person { Id = _childHid1, Name = "Robb Stark" },
                new Person { Id = _childHid2, Name = "Jon Snow" });
        }

        public override string GetExpectedMigrationCode(string migrationName, string @namespace)
        {
            return @"using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Migrations;

namespace " + @namespace + @".Migrations
{
    public partial class " + migrationName + @" : Migration
    {
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.CreateTable(
                name: ""People"",
                columns: table => new
                {
                    Id = table.Column<HierarchyId>(nullable: false),
                    Name = table.Column<string>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey(""PK_People"", x => x.Id);
                });

            migrationBuilder.InsertData(
                table: ""People"",
                columns: new[] { ""Id"", ""Name"" },
                values: new object[] { Microsoft.EntityFrameworkCore.HierarchyId.Parse(""/""), ""Eddard Stark"" });

            migrationBuilder.InsertData(
                table: ""People"",
                columns: new[] { ""Id"", ""Name"" },
                values: new object[] { Microsoft.EntityFrameworkCore.HierarchyId.Parse(""/1/""), ""Robb Stark"" });

            migrationBuilder.InsertData(
                table: ""People"",
                columns: new[] { ""Id"", ""Name"" },
                values: new object[] { Microsoft.EntityFrameworkCore.HierarchyId.Parse(""/2/""), ""Jon Snow"" });
        }

        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropTable(
                name: ""People"");
        }
    }
}
";
        }


        public override string GetExpectedSnapshotCode(string @namespace)
        {
            return @"// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.SqlServer.Migrations.Models;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace " + @namespace + @".Migrations
{
    [DbContext(typeof(" + nameof(MigrationContext1) + @"))]
    partial class " + nameof(MigrationContext1) + @"ModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618

            modelBuilder.Entity(""Microsoft.EntityFrameworkCore.SqlServer.Migrations.Models.Person"", b =>
                {
                    b.Property<HierarchyId>(""Id"")
                        .HasColumnType(""hierarchyid"");

                    b.Property<string>(""Name"")
                        .HasColumnType(""nvarchar(max)"");

                    b.HasKey(""Id"");

                    b.ToTable(""People"");

                    b.HasData(
                        new
                        {
                            Id = Microsoft.EntityFrameworkCore.HierarchyId.Parse(""/""),
                            Name = ""Eddard Stark""
                        },
                        new
                        {
                            Id = Microsoft.EntityFrameworkCore.HierarchyId.Parse(""/1/""),
                            Name = ""Robb Stark""
                        },
                        new
                        {
                            Id = Microsoft.EntityFrameworkCore.HierarchyId.Parse(""/2/""),
                            Name = ""Jon Snow""
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
";
        }

    }

    internal sealed class MigrationContext2 : MigrationContext
    {
        private static readonly HierarchyId _rootHid = HierarchyId.GetRoot();
        private static readonly HierarchyId _childHid1 = HierarchyId.Parse("/1/");
        private static readonly HierarchyId _childHid2 = HierarchyId.Parse("/2/");

        protected override void SeedData(EntityTypeBuilder<Person> builder)
        {
            builder.HasData(
                new { Id = _rootHid, Name = "Eddard Stark" },
                new { Id = _childHid1, Name = "Robb Stark" },
                new { Id = _childHid2, Name = "Jon Snow" });
        }

        public override string GetExpectedMigrationCode(string migrationName, string @namespace)
        {
            return @"using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Migrations;

namespace " + @namespace + @".Migrations
{
    public partial class " + migrationName + @" : Migration
    {
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.CreateTable(
                name: ""People"",
                columns: table => new
                {
                    Id = table.Column<HierarchyId>(nullable: false),
                    Name = table.Column<string>(nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey(""PK_People"", x => x.Id);
                });

            migrationBuilder.InsertData(
                table: ""People"",
                columns: new[] { ""Id"", ""Name"" },
                values: new object[] { Microsoft.EntityFrameworkCore.HierarchyId.Parse(""/""), ""Eddard Stark"" });

            migrationBuilder.InsertData(
                table: ""People"",
                columns: new[] { ""Id"", ""Name"" },
                values: new object[] { Microsoft.EntityFrameworkCore.HierarchyId.Parse(""/1/""), ""Robb Stark"" });

            migrationBuilder.InsertData(
                table: ""People"",
                columns: new[] { ""Id"", ""Name"" },
                values: new object[] { Microsoft.EntityFrameworkCore.HierarchyId.Parse(""/2/""), ""Jon Snow"" });
        }

        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropTable(
                name: ""People"");
        }
    }
}
";
        }


        public override string GetExpectedSnapshotCode(string @namespace)
        {
            return @"// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.SqlServer.Migrations.Models;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace " + @namespace + @".Migrations
{
    [DbContext(typeof(" + nameof(MigrationContext2) + @"))]
    partial class " + nameof(MigrationContext2) + @"ModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618

            modelBuilder.Entity(""Microsoft.EntityFrameworkCore.SqlServer.Migrations.Models.Person"", b =>
                {
                    b.Property<HierarchyId>(""Id"")
                        .HasColumnType(""hierarchyid"");

                    b.Property<string>(""Name"")
                        .HasColumnType(""nvarchar(max)"");

                    b.HasKey(""Id"");

                    b.ToTable(""People"");

                    b.HasData(
                        new
                        {
                            Id = Microsoft.EntityFrameworkCore.HierarchyId.Parse(""/""),
                            Name = ""Eddard Stark""
                        },
                        new
                        {
                            Id = Microsoft.EntityFrameworkCore.HierarchyId.Parse(""/1/""),
                            Name = ""Robb Stark""
                        },
                        new
                        {
                            Id = Microsoft.EntityFrameworkCore.HierarchyId.Parse(""/2/""),
                            Name = ""Jon Snow""
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
";
        }

    }
}
